<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink="#954F72" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Week:</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;5</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Date Reported:&nbsp;</span></b><span
style='font-family:"Times New Roman",serif;color:black'>09/22/2023</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Project Hours since
Last Report:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>9</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Cumulative Semester
Project Hours:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>46</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Description of
Individual Project Work Efforts:</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>What I worked on</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>This&nbsp;weeks&nbsp;work
focused on interfacing with the 7-segment displays, supporting the mechanical
modifications to the air hockey table, and progressing with team organization
and component acquisition. Up to this point, I interfaced with the USB to UART
converter, supporting PSDR #2. This&nbsp;weeks&nbsp;goal was to support PSDR #3
by ensuring that the hockey tables existing 7-segment display could be
leveraged to show the score to the human player. In addition to this, I devoted
time to designing and 3D printing parts to support the integration of IR break
sensors into a puck shoot. The rest of my time went to team organization, in
which I worked on the project description, updated PSDR #4, and submitted a
purchase form to the business office. While I&nbsp;didnt&nbsp;make as much
progress this week as I aimed to, I was able to identify a good path for future
interfacing.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Method</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Interfacing with the
7-Segment Display</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>While I knew
interfacing with the 7-segment display was possible, my plan this week was to
explore different ways in that interface could exist. Initially, I followed an
approach similar to that taken in&nbsp;<a
href="https://ece362-purdue.github.io/f2022-public-labs/lab-03/lab_03.html">ECE362
Lab 3</a>, in which I used a TLC59211 sink driver along with PN2907A
transistors to provide the current needed to support the 7-segment.&nbsp;<a
href="https://www.ti.com/lit/ds/symlink/sn74hc595.pdf?ts=1695281292760&amp;ref_url=https%253A%252F%252Fwww.ti.com%252Fproduct%252Fko-kr%252FSN74HC595%253Futm_source%253Dgoogle%2526utm_medium%253Dcpc%2526utm_campaign%253Dasc-int-null-44700044498855648_prodfolderdynamic-cpc-pf-google-kr_int%2526utm_content%253Dprodfolddynamic%2526ds_k%253DDYNAMIC%2BSEARCH%2BADS%2526DCM%253Dyes%2526gclid%253DEAIaIQobChMIjbah8Za7gQMV6doWBR0ViwdyEAAYASAAEgKsAfD_BwE%2526gclsrc%253Daw.ds">HC595
shift registers</a>&nbsp;were also used for multiplexing and selecting between
segments and displays. I then wrote a script in the Arduino IDE to create a
countdown on a common-anode 7-segment display. At this point in prototyping, I
did not have access to the 7-segment display from the air hockey table, so I
used a separate display to illustrate proof of concept.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The second approach was
explored by&nbsp;Camerons&nbsp;work, in which he implemented a similar circuit
design and used HC595 shift registers&nbsp;<i>without</i>&nbsp;the sink driver
and transistors to drive the 7-segment. I modified this design to experiment.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The third approach to
drive the 7-segment display was to use a&nbsp;<a
href="https://pdf1.alldatasheet.com/datasheet-pdf/view/825460/SITI/DM13A-E.html">DM13A
LED</a>&nbsp;driver in place of the HC595 shift registers, sink driver, and
transistors. This approach was desired to mitigate the number of discrete
components to be soldered to the PCB.&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD and Mechanical
Design</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I completed and
modified the design for the puck shoot that will be used in combination with
the IR sensors to detect the score. I have access to 3D printers in Young Hall,
so I printed the&nbsp;shoot&nbsp;and tested it with the table. Upon testing, I
made some modifications and printed another version. I also updated the
scoreboard extenders and reprinted those parts to have a greater tolerance and
to have a hole in the bottom to allow the integration of wires. I then printed
motor mounts designed by Cameron. Finally, I devoted a little bit of time to
disassembling the borders of the air hockey table so that the motors can soon
be mounted.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Team Organization and
Component Acquisition</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I updated the&nbsp;teams&nbsp;project
description on the website to provide more detail on how the project will be
powered and interfaced. I also updated the teams PSDR #4 on the website to
reflect the&nbsp;teams&nbsp;choice to use IR break sensors. Additionally, I
visited the EE shop several times throughout the week to acquire the sink
drivers and shift registers. I also visited to see if they had IR break
sensors. They did not, so I submitted a purchase request form through the
business office.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Results and Impact</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Interfacing with the
7-Segment Display</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><u><span
style='font-family:"Times New Roman",serif;color:black'>Option 1: Shift
Registers with Sink Driver and Transistors</span></u></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>While I&nbsp;couldnt&nbsp;complete
my goal of interfacing the 7-segment with the STM this week, I made progress with
interfacing with the Arduino Nano. While using transistors and a sink driver
worked great in terms of driving the 7-segments, it was decided that this
design was not ideal as it would require a significant&nbsp;amount&nbsp;of
discrete components to be soldered to the PCB. The 7-segment shown below is
common-anode.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'><img border=0
width=339 height=227 id="Picture 15" src="ahaluska_files/image001.png"
alt="A circuit board with wires and a digital display&#10;&#10;Description automatically generated"></span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Displaying a 10-Digit
Countdown with Arduino Nano</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><u><span
style='font-family:"Times New Roman",serif;color:black'>Option 2: Shift
Registers without Sink Driver and Transistors</span></u></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>Cameron interfaced with
an Arduino Uno to display digits on the tables 7-segment display, which is
common cathode. While a design without sink drivers and transistors is more
spatially effective, it was found that the LEDs did not draw enough current to
be as bright as option 1s outcome. Thinking that the Arduino was limiting the
output current, I modified&nbsp;Camerons&nbsp;design to rely on an external 7V
benchtop power source; however, this modification did not improve the
brightness of the LEDs. If this design is to be implemented, we will need to
add a sink driver and transistors to resemble Option&nbsp;1s&nbsp;design.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'><img border=0
width=470 height=176 id="Picture 14" src="ahaluska_files/image002.png"
alt="A close-up of a circuit board&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>External Power Source
with the Shift Registers (Dimmer Output)</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><u><span
style='font-family:"Times New Roman",serif;color:black'>Option 3: DM13A LED
Driver</span></u></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>Cameron provided me a
DM13A LED driver, in which I followed the DM13A pinout to connect this to the
tables 7-segment display. I then experimented with the constant-current value
by testing different resistance values between REXT and GND (see below).
Ultimately, I was unable to get the DM13A to drive the tables 7-segment
display. Upon researching, I found that the DM13A&nbsp;<a
href="https://forum.arduino.cc/t/need-help-with-dm13a-16-bit-shift-register-ic/580565">might
not support common-cathode displays</a>. I plan to&nbsp;look into&nbsp;this
further and continue to prototype with the DM13A next week.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'><img border=0
width=464 height=74 id="Picture 13" src="ahaluska_files/image003.png"
alt="A yellow rectangular with black numbers&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Resistance Values used
between REXT and GND with the DM13A</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD and Mechanical
Design</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I printed modified
versions of the scoreboard extenders and the puck funnel. The scoreboard
extender is now&nbsp;complete&nbsp;and the funnel is complete for prototyping.
I also printed two versions of&nbsp;Camerons&nbsp;motor mount. This design will
be tested on Monday, and if it works, I will print this design out of resin to
withstand the&nbsp;motors&nbsp;potential high temperature.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Team Organization and
Component Acquisition</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I submitted an order
through the procurement office to purchase&nbsp;<a
href="https://www.adafruit.com/product/2168">IR break beam sensors</a>. These
sensors should be in by the middle of next week. I also modified PSDR #4 so
that is set in stone.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Learnings</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I learned a lot about
multiplexing and interfacing with the 7-segment displays this week.&nbsp;In
particular, I&nbsp;learned about using transistors and sink drivers to provide
enough current to drive LEDs. While I did not make as much progress with
multiplexing this week as I hoped, interfacing with the Arduino was a good
refresher of SPI and interrupts.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Next Steps</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Interface with the
DM13A led driver [asap]</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Switch Arduino code
over to STM32 [this week]</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Write a script that
receives data from the PC and displays that data on the 7-segment display
[longer term]</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Week:</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;4</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Date Reported:&nbsp;</span></b><span
style='font-family:"Times New Roman",serif;color:black'>09/15/2023</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Project Hours since
Last Report:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>10</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Cumulative Semester
Project Hours:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>37</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Description of
Individual Project Work Efforts:</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>What I worked on</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I spent week four
focusing on the interface between the FTDI USB to UART IC and the
microcontroller. This work was a continuation of the previous&nbsp;weeks&nbsp;focus,
and it involved improving the method of sending data from PC to micro that I
developed last week. Additionally, I devoted time to supporting the mechanical
integration of the camera. This involved designing parts to extend the height
of the scoreboard so that the camera could be mounted from the scoreboard to
achieve a full field of view. I also began designing a puck shoot that will
ensure the puck can be detected by Johns IR sensor before being returned to the
player. The remainder of my time went towards component acquisition. I am out
of town on Friday, so this report covers my work up to Thursday.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Method</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Interfacing with the
USB to UART IC</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I devoted most of my
time to improving last&nbsp;weeks&nbsp;method of interfacing with the
USB-to-serial adapter IC. Last week, I prototyped with USART5 to verify proof
of concept that PSDR #2 is achievable. This week, I expanded upon last&nbsp;weeks&nbsp;progress
by referencing the&nbsp;</span><span style='color:black'><a
href="https://engineering.purdue.edu/ece362/refs/STM32F091xBC.pdf"><span
style='font-family:"Times New Roman",serif'>STM32F091x data sheet</span></a>&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>to identify the most
efficient method of interfacing the IC. Section 3.17 of this reference led me
to identify USART2 as a more appropriate means of communication. USART2 can
communicate at speeds of up to 6&nbsp;Mbits&nbsp;per second and has greater
capabilities than USART5, including&nbsp;</span><span style='color:black'><a
href="https://www.st.com/resource/en/application_note/an4991-how-to-wake-up-an-stm32-microcontroller-from-lowpower-mode-with-the-usart-or-the-lpuart-stmicroelectronics.pdf"><span
style='font-family:"Times New Roman",serif'>dual clock domain and wakeup from
Stop mode</span></a></span><span style='font-family:"Times New Roman",serif;
color:black'>, receiver timeout interrupt, and&nbsp;</span><span
style='color:black'><a
href="https://www.st.com/resource/en/application_note/an4908-stm32-usart-automatic-baud-rate-detection-stmicroelectronics.pdf"><span
style='font-family:"Times New Roman",serif'>auto baud rate detection</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>. USART2 is affiliated
with AF1, PA2 (tx) and PA3 (rx). I also referenced section 27 of the&nbsp;</span><span
style='color:black'><a
href="https://www.st.com/resource/en/reference_manual/rm0091-stm32f0x1stm32f0x2stm32f0x8-advanced-armbased-32bit-mcus-stmicroelectronics.pdf"><span
style='font-family:"Times New Roman",serif'>the&nbsp;STM32 user manual</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;when implementing
support for communication over USART2. Finally, verifying DMA implementation
involved referencing section 10 of the STM32 user manual to ensure the DMA
could handle the given throughput.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><b><i><span style='font-family:"Times New Roman",serif;
color:black'>STM32 Receiving Data</span></i></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>The only changes made to my&nbsp;main.c&nbsp;file in STM32Cubes
IDE were to support the change from USART5 to USART2 and to support the
receiving of a byte array containing the pucks prediction location. These
changes involved changing several variables to point to huart2 and USART2. They
also involved updating the uint8_t&nbsp;<i>rxdata&nbsp;</i>variable to look for
up to 12 characters as the current data sent from Python is typically between 7
and 12 characters.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><b><i><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></i></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><b><i><span style='font-family:"Times New Roman",serif;
color:black'>PC Transmitting Data</span></i></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>Successfully sending serial data through python ended up being
simple yet time consuming to perfect. I ended up writing a&nbsp;</span><span
style='color:black'><a
href="https://github.com/CameronMccutcheon02/ECE477/blob/main/Personals/Abby/serial_comms/serial_comms.py"><span
style='font-family:"Times New Roman",serif'>script</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;that uses the
serial and&nbsp;infi.devicemanager&nbsp;libraries. This script defines three
functions:&nbsp;setup_serialobject(),&nbsp;serial_write(), and&nbsp;serial_read().</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>The&nbsp;setup_serialobject() function uses the&nbsp;infi.devicemanager&nbsp;API
to identify which COM port a USB device is connected to. This COM port is then
passed as an argument into a serial object,&nbsp;<i>ser,&nbsp;</i>with baud
rate of 115200. The script then wipes the serial port and resets it to ensure
accurate data transfer. The&nbsp;<i>ser&nbsp;</i>object is returned. This
function is used in transmitting data from PC to micro.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>The&nbsp;serial_write() function accepts a serial object and data
and writes the data in the form of a&nbsp;bytearray&nbsp;to the serial port
affiliated with the serial object. This function is used in transmitting data
from PC to micro.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>The&nbsp;serial_read() function accepts a serial object and
returns the data read from that port. This function was created for prototyping
and will not be used in communicating with the STM.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>I created a copy of Joeys color detection script and I imported
and implemented the functions above to write the pucks predicted coordinates to
the STM32.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I spent additional time
this week designing parts for the air hockey table. The first part that I
designed is an&nbsp;extender&nbsp;to increase the height of the scoreboard.
This is so the camera can be hung from the middle of the scoreboard and achieve
a full field of view. In addition to this, I started designing a puck shoot to
funnel the puck in a route that ensures sensor detection. I am using Fusion360
to design these parts, 3DWOX to generate the g-code, and printers on the 3<sup>rd</sup>&nbsp;floor
of Young Hall to print the parts in PLA filament.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Component Acquisition</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The final focus of my
week was acquiring parts for prototyping and for PCB development. This involved
submitting an order through the business office. The purchase request form with
links to the components ordered can be found&nbsp;</span><span
style='color:black'><a
href="https://github.com/CameronMccutcheon02/ECE477/blob/main/Mechanics/Senior%20Design%20Purchase%20Request.xlsx"><span
style='font-family:"Times New Roman",serif'>here</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Results and Impact</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Interfacing with the
USB to UART IC</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>By the end of this
week, I was able to establish communication between the PC and the
microcontroller via UART. I leveraged a python script that prints the predicted
location of a puck to transmit that prediction data to the microcontroller.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>Now, I verify that the
microcontroller is receiving data by sending an acknowledgement back to the PC
containing the data received. I then read that acknowledgement on the PC
using&nbsp;pythons&nbsp;serial module. The image below illustrates the
successful transmission of data from Python (top two windows) and the
successful receival of data on the STM (bottom terminal window). The windows on
the top are establishing a serial object and writing the pucks predicted
location to the USBs COM port. The window on the bottom is printing the sent
data in the form of&nbsp;<i>Prediction: (x,y)</i>&nbsp;and the received data in
the form of&nbsp;<i>b(x, y)\n</i>. The slight delay is because the python
script is waiting to read the acknowledgement sent by the STM, so this would
not be existent in the final prototype. This work contributes to the&nbsp;teams&nbsp;achievement
of PSDR #2.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><b><i><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'><img border=0
width=689 height=312 id="Picture 12" src="ahaluska_files/image004.png"
alt="A screenshot of a computer screen&#10;&#10;Description automatically generated"></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></b><i><span
style='font-family:"Times New Roman",serif;color:black'>Verifying Communication
of Data</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I printed two
prototypes of scoreboard extenders. One of which would be screwed onto the top
of the tables border, and the other of which slides into the existing hole in
the tables border. Upon testing both prototypes, I decided to move forward with
the second version, which can be seen below. These extenders successfully
increase the height of the scoreboard by about 4 inches, allowing the camera to
achieve a full field of view. I am still designing the puck return system. This
progress contributes to the&nbsp;teams&nbsp;overall progress with modifying the
hockey table.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'><img border=0
width=341 height=368 id="Picture 11" src="ahaluska_files/image005.png"
alt="A silver pipe with white band&#10;&#10;Description automatically generated with medium confidence"></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='color:black'><img border=0 width=438 height=365 id="Picture 10"
src="ahaluska_files/image006.png"
alt="A red and silver pipe on a white surface&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD Model of Scoreboard
Height Extender | Printed Scoreboard Height Extender</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Component Acquisition</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The procurement form
was submitted last Friday and received and processed on Monday. The following
parts have been shipped and are expected to arrive by the start of next week:</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>2 Stepper Motors</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>2 Stepper Motor Drivers</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>1 Pulley</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>1 Belt for Pulley</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>4 Green Hockey Pucks</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>This progress helps the
team by ensuring that prototyping can take place soon.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Learnings</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The main challenge that
I overcame this week was learning how to encode and send serial data in python.
Originally, the data that I was sending was being received in the wrong format
by the STM. This caused the data to not be readable, so I was unable to verify
that the STM received the correct data. To fix this problem, I had to set the
baud rate, timeout,&nbsp;xonxoff,&nbsp;rtscts, and&nbsp;dsrdtr&nbsp;parameters
of the serial object created in python.&nbsp;In particular, I&nbsp;chose a
115200 baud rate with the other parameters set to False. The&nbsp;</span><span
style='color:black'><a
href="https://pyserial.readthedocs.io/en/latest/pyserial_api.html"><span
style='font-family:"Times New Roman",serif'>pyserial&nbsp;documentation</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;helped me learn
how to do this. I also had to flush the serial port prior to writing to it,
otherwise I encountered errors. Finally, I had to add a newline character to
the start of every&nbsp;byte&nbsp;of data sent.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'><br>
I also learned how to more efficiently read documentation to answer the
questions that I had about USART and DMA.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Next Steps</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Verify the Received Data
in STM32Cube IDE instead of Python</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:1.0in;text-indent:-.25in;line-height:normal'><span
style='font-family:"Courier New";color:black'>o</span><span style='font-size:
7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Identify the latency of
the USB to UART IC and the overall latency of communicating between PC and
Micro</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Test bandwidth of DMA
in STM32Cube</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Start interfacing with
the 7-segment display to prove concept before finalization of the PCB design</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Print the puck return
system</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Week:</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;3</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Date Reported:&nbsp;</span></b><span
style='font-family:"Times New Roman",serif;color:black'>09/08/2023</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Project Hours since
Last Report:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>11</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Cumulative Semester
Project Hours:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>27</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Description of
Individual Project Work Efforts:</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>What I worked on</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I spent week three
focusing on getting started with establishing communication between a
microcontroller and a PC and designing parts to support the physical
integration of the camera onto the robot. This involved working on a python
script to send serial data to a COM port using the&nbsp;PySerial&nbsp;package.
Additionally, I worked on a C script that transmits and receives serial data to
and from the STM32. The remainder of my time was spent on team organization and
component acquisition.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Method</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>STM32 Transmitting and
Receiving Data with C</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The highlight of my
work this week was my ability to write a script that transmits and receives
data to and from the STM32 using UART. To achieve this, I connected the USB to
TTL converter to my STM32. I made use of pins PD2 (USART_RX) and PC12
(USART_TX) to establish the UART connection. I referenced&nbsp;</span><span
style='color:black'><a
href="https://engineering.purdue.edu/ece362/refs/STM32F091xBC.pdf"><span
style='font-family:"Times New Roman",serif'>the STM32 datasheet</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;to validate my
work. I then installed the STM32Cube IDE and familiarized myself with this
software, as STM32Cube offers more convenient integration of plugins over the
Eclipse IDE. I then wrote a script using C that enables asynchronous serial
communication of the USART5 IC. I chose a baud rate of 115200 for testing.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>Upon initializing the
clock, GPIO pins, the DMA, and the UART, I then called various functions to
send data over UART. I used the built-in&nbsp;</span><b><span style='font-size:
10.0pt;font-family:"Courier New";color:black;background:#E8F2FE'>HAL_UART_Transmit</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;function to send
data in blocking mode and the&nbsp;</span><b><span style='font-size:10.0pt;
font-family:"Courier New";color:black;background:#E8F2FE'>HAL_UART_Receive_DMA</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;function to
receive data in DMA mode. I referenced&nbsp;</span><span style='color:black'><a
href="https://www.st.com/resource/en/product_training/STM32F7_System_DMA.pdf"><span
style='font-family:"Times New Roman",serif'>the STM32 DMA documentation&nbsp;</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>which led me to set the
DMA to support circular mode. For more detail, my code can be found&nbsp;</span><span
style='color:black'><a
href="https://github.com/CameronMccutcheon02/ECE477/blob/main/Personals/Abby/serial_comms/main.c"><span
style='font-family:"Times New Roman",serif'>here</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>To test my script, I
used the&nbsp;</span><span style='color:black'><a
href="https://ttssh2.osdn.jp/index.html.en"><span style='font-family:"Times New Roman",serif'>TeraTerm</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;and&nbsp;</span><span
style='color:black'><a href="https://sourceforge.net/projects/realterm/"><span
style='font-family:"Times New Roman",serif'>RealTerm</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;applications.&nbsp;TeraTerm&nbsp;is
a terminal emulator that I&nbsp;used&nbsp;to read the data being sent from the
STM32 to the serial port.&nbsp;RealTerm&nbsp;is another serial terminal program
that I used for writing data to the serial port to confirm that the STM32 could
read it.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>PC Transmitting and Receiving
Data with Python</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>While I had success
with transmitting and receiving data on the STM32, I encountered challenges in
sending data from the PC via python. My approach for this task involved writing
a python script that uses the&nbsp;PySerial&nbsp;module to create a serial
object of baud rate 115200 and COM port matching that of the USB to TTL
converter. I then used the&nbsp;serial.write&nbsp;function to write data to the
specified serial port.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD Parts to Support
Camera Integration</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>In addition to my work
with serial communications, I took dimensions of the score board so I can get
started with printing extenders to give the score board more height. This was
done because the camera that we ordered from Amazon does not view the entire
table at the score&nbsp;boards&nbsp;current height. By printing extenders, I
can give the score board more height so the camera can be mounted to the middle
of the scoreboard and achieve an accurate field of view. I am using Fusion360
to create the .stl&nbsp;files used in printing.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Team Organization and Component
Acquisition</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I spent time this week
arranging a time for the team to meet with a Facebook Marketplace vendor to
pick up the hockey table. I also dedicated time to creating a document
outlining weekly goals for the team. This document has team-specific goals
along with individual goals, and it was created to help the team stay on track
throughout the semester. I will be updating this document every week.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Results and Impact</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>STM32 Transmitting and
Receiving Data with C</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I saw the best results
with this&nbsp;particular task&nbsp;this week. Upon implementing the method
above, I was able to successfully write serial data to a COM port via UART.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='color:black'><img border=0 width=677 height=214 id="Picture 9"
src="ahaluska_files/image007.png"
alt="A computer screen with a black square&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Sending&nbsp;txdata&nbsp;over
UART and Verifying with&nbsp;TeraTerm</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I also saw success with
reading serial data via UART and DMA. I used&nbsp;RealTerm&nbsp;to send the
data Test to the serial port. I then used the&nbsp;</span><b><span
style='font-size:10.0pt;font-family:"Courier New";color:black;background:#E8F2FE'>HAL_UARTEx_RxEventCallback</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;function to
transmit an acknowledgement whenever data was read. I first transmitted the
data read to confirm that the correct data was received. I then transmitted an
acknowledgment containing the data Received, as seen below.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='color:black'><img border=0 width=536 height=351 id="Picture 8"
src="ahaluska_files/image008.png"
alt="A screenshot of a computer&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Verifying Data was
Received using&nbsp;RealTerm</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>The progress made with
this task supports the team in accomplishing PSDR #2 and provides a helpful
benchmark for establishing communication between the PC and the
microcontroller.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>PC Transmitting and
Receiving Data with Python</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I have not yet verified
that my python script successfully writes to the specified port given the
inability to use&nbsp;RealTerm&nbsp;or&nbsp;TeraTerm&nbsp;in parallel with
running my python script. Whenever I tried using either of the apps while my
script was&nbsp;ran, I was unable to open the COM port given that it was being
used in a different application. I plan to spend more time working on this task
throughout the coming week. I also plan to&nbsp;look into&nbsp;using&nbsp;PyUSB,&nbsp;LibUSB,
or&nbsp;infi&nbsp;in supporting this task. This task supports progress with
PSDR #2.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>CAD Parts to Support
Camera Integration</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I have not yet finished
the drawings that will be used in printing components to support integration of
the camera, but I got a good start to this task and plan to print throughout
the weekend. This task affects the project by supporting the future capture of
live video to be used in Joeys puck-detection program. More directly, this task
relates to PSDR #5.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Learnings</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I spent&nbsp;the&nbsp;most
time working on transmitting and receiving serial data over UART with the
STM32, and I learned the most in this process.&nbsp;In particular, I&nbsp;learned
how to use and optimize the use of STM32Cubes IDE. I had a little bit of
experience with this IDE from my job this&nbsp;summer, but&nbsp;levered
this&nbsp;weeks&nbsp;work to familiarize myself with it more. I also learned
how to use different serial data programs such as those described above. While
I had a little bit of experience with&nbsp;TeraTerm, I found a lot of value in
using&nbsp;RealTerm&nbsp;to validate my work.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Next Steps</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Make progress
with&nbsp;PySerial&nbsp;to successfully send data to the STM32 from the PC over
UART.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:1.0in;text-indent:-.25in;line-height:normal'><span
style='font-family:"Courier New";color:black'>o</span><span style='font-size:
7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Experiment with other
libraries and packages to determine most efficient method of sending serial
data.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:1.0in;text-indent:-.25in;line-height:normal'><span
style='font-family:"Courier New";color:black'>o</span><span style='font-size:
7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Use my C script to read
the data that is sent from Python.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:1.0in;text-indent:-.25in;line-height:normal'><span
style='font-family:"Courier New";color:black'>o</span><span style='font-size:
7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Troubleshoot existing
problems.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:1.0in;text-indent:-.25in;line-height:normal'><span
style='font-family:"Courier New";color:black'>o</span><span style='font-size:
7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Integrate my script
with Joeys script to send the pucks trajectory over UART.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>Expand on C script to
store the data that the STM32 receives.</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;text-indent:-.25in;line-height:normal'><span style='font-family:
"Times New Roman",serif;color:black'>-</span><span style='font-size:7.0pt;
font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='font-family:"Times New Roman",serif;color:black'>3D print height
extensions for the score board</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Week:</span></b><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;1 and 2&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Date Reported:&nbsp;</span></b><span
style='font-family:"Times New Roman",serif;color:black'>09/01/2023</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Project Hours since
Last Report:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>16</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Cumulative Semester
Project Hours:&nbsp;</span></b><span style='font-family:"Times New Roman",serif;
color:black'>16</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-family:"Times New Roman",serif;color:black'>Description of
Individual Project Work Efforts:</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-family:"Times New Roman",serif;color:black'>I devoted my time
throughout weeks one and two to object detection and tracking with computer
vision, component analysis, and team&nbsp;organization .&nbsp;The sections
below detail my work in each relative category:</span></p>

<p class=MsoNormal style='margin-bottom:12.0pt;line-height:normal'><span
style='color:black'>&nbsp;</span></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='color:black;margin-bottom:0in;line-height:normal;
     vertical-align:baseline'><b><span style='font-family:"Times New Roman",serif'>Object
     Detection and Tracking using Computer Vision and OpenCV</span></b></li>
</ol>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>I spent about 11 of the 16 worked hours studying and implementing
computer vision techniques and strategies.</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Detecting Objects in
Motion</span></i></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>I referenced&nbsp;</span><span style='color:black'><a
href="https://www.youtube.com/watch?v=O3b8lVF93jU"><span style='font-family:
"Times New Roman",serif;color:#1155CC'>this tutorial&nbsp;</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>to write a script that
uses moving object detection with a stationary camera to track the coordinates
of an object in motion. Given that our team is in the midst of purchasing an
air hockey table, I used an&nbsp;</span><span style='color:black'><a
href="https://www.youtube.com/watch?v=e_cz4DaimyM"><span style='font-family:
"Times New Roman",serif;color:#1155CC'>external birds-eye video of two people
playing air hockey</span></a></span><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;to test and verify this script. The image below is a
screenshot of the output of this script, in which the green square is a
bounding box defining the coordinates of the red puck in motion:</span></p>

<p class=MsoNormal style='margin-bottom:12.0pt;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'><br>
</span><span style='color:black'><img border=0 width=393 height=242
id="Picture 7" src="ahaluska_files/image009.png"
alt="A red circle on a white surface&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Using OpenCV to Detect
Objects in Motion</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>To detect the puck in motion, I created a mask so that all moving
objects are white against a black background, as seen in the image below. I
then used the cv2.findContours function to identify the boundaries of all
moving objects. To improve the accuracy, I then searched for contours with
areas greater than 4000 pixels and less than 5000 pixels, which is about the
area of the puck in the video. The&nbsp;openCV&nbsp;documentation that I
referenced can be found&nbsp;</span><span style='color:black'><a
href="https://docs.opencv.org/4.x/"><span style='font-family:"Times New Roman",serif;
color:#1155CC'>here</span></a></span><span style='font-family:"Times New Roman",serif;
color:black'>.&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-size:12.0pt;font-family:
"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'><img border=0
width=360 height=190 id="Picture 6" src="ahaluska_files/image010.png"
alt="A black background with white circles&#10;&#10;Description automatically generated with medium confidence"></span></i><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></i></p>

<p class=MsoNormal align=center style='margin-bottom:0in;text-align:center;
line-height:normal'><i><span style='font-family:"Times New Roman",serif;
color:black'>&nbsp;&nbsp;</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Using OpenCV to Create a Mask of each&nbsp;Frame</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>For the most part, this technique was successful in detecting a
hockey puck at high speed. However, because the technique involves searching
for objects in motion, I encountered the problem of not recognizing the&nbsp;puck&nbsp;if
it is at a stop. Below is a frame in which the hockey puck was not moving
according to its last relative position, in which the script does not recognize
the hockey puck.&nbsp;&nbsp;</span></p>

<p class=MsoNormal align=center style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:1.5in;text-align:center;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:12.0pt;line-height:normal'><span
style='color:black'><img border=0 width=365 height=230 id="Picture 5"
src="ahaluska_files/image011.png"
alt="A close-up of a game&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:12.0pt;text-indent:.5in;line-height:
normal'><i><span style='font-family:"Times New Roman",serif;color:black'>Motion
Detection Failing to Recognize Puck</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>In addition to this issue, I also encountered the issue of other
objects of similar size in motion being detected. The paddles being used were
frequently detected, which conflicted with the coordinates tracked by the
script. This issue can be seen in the image below.</span></p>

<p class=MsoNormal style='margin-bottom:12.0pt;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'><br>
<br>
</span><span style='color:black'><img border=0 width=364 height=226
id="Picture 4" src="ahaluska_files/image012.png"
alt="A red circle on a white surface with Ice hockey rink in the background&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Motion Detection not
Isolating Puck from other Moving Objects</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><b><i><span
style='font-family:"Times New Roman",serif;color:black'>Detecting Circles&nbsp;</span></i></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>Given the inaccuracies associated with detecting objects in motion
that are described above, I wrote a script to detect circle objects of
radius&nbsp;similar to&nbsp;that of the puck. I referenced&nbsp;</span><span
style='color:black'><a
href="https://www.geeksforgeeks.org/circle-detection-using-opencv-python/"><span
style='font-family:"Times New Roman",serif;color:#1155CC'>this tutorial</span></a></span><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;and the OpenCV
documentation to apply this technique. In the end, it was found that circle
detection was much more accurate than moving object detection. In the image
below, the entire frame is considered and only the puck is outlined by a green
contour.&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='color:black'><img border=0 width=378 height=201 id="Picture 3"
src="ahaluska_files/image013.png"
alt="A hand holding a red object&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Circle Detection Using
OpenCV</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Capturing
Live Video</b></span></i></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>While the scripts described above use a pre-recorded video, I
identified a route for future implementation of live webcam video. The image
below is a screenshot of the line that accesses webcam footage using OpenCV. I
referenced the OpenCV documentation in writing this.&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-size:12.0pt;font-family:
"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='color:black'><img border=0 width=554 height=56 id="Picture 2"
src="ahaluska_files/image014.png"></span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Creating a Video Object
with Recorded Video vs. Live Webcam Footage</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:12.0pt;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>In conclusion, I found that OpenCV is a powerful and fast library
to be used in computer vision as it is written in C++. The work reflected above
contributes to our&nbsp;teams&nbsp;progress on PSDR #5.&nbsp; Moving on, I plan
to combine my circle-detection script with Joeys color-detection script so that
the final script detects circle objects of the pucks color for high accuracy. I
then plan to implement live camera footage on our air-hockey table. Following
this, I will identify a way to predict the trajectory of a puck in
motion.&nbsp;&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal;vertical-align:
baseline'><b><span style='font-family:"Times New Roman",serif;color:black'>2.</span></b><b><span
style='font-size:7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></b><b><span
style='font-family:"Times New Roman",serif;color:black'>Component Analysis</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>I devoted about 3 of the 16 worked hours to researching components
to be used in our&nbsp;teams&nbsp;prototype. This first involved finding a used
air hockey table to purchase. The table shown below was the selected table as
it is large enough to allow for ample time in between puck attacks.
Additionally, it will cost our team around $100 of our budget. I contacted the
seller on Facebook Marketplace and arranged a time to purchase the table. I
drove myself and John to Lafayette to confirm the tables functionality. The
table is expected to be delivered by early next week. This work helps our team
progress with physical prototyping.&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='color:black'><img border=0 width=198 height=272 id="Picture 1"
src="ahaluska_files/image015.png"
alt="A air hockey table in a garage&#10;&#10;Description automatically generated"></span></p>

<p class=MsoNormal style='margin-bottom:0in;text-indent:.5in;line-height:normal'><i><span
style='font-family:"Times New Roman",serif;color:black'>Selected Air Hockey
Table</span></i></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>In addition to this, I spent time researching potential cameras to
be used for computer vision. With the goals of our project in mind, I decided
to contribute the following camera choices to the&nbsp;teams&nbsp;options:</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='border-collapse:collapse'>
 <tr>
  <td valign=top style='border:solid black 1.0pt;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><a
  href="https://www.amazon.com/gp/product/B000VTQ3LU/ref=as_li_tf_tl?ie=UTF8&amp;tag=mhad-quad-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000VTQ3LU"><span
  style='font-family:"Times New Roman",serif;color:#1155CC'>PlayStation Eye</span></a><span
  style='font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>
  </td>
  <td valign=top style='border:solid black 1.0pt;border-left:none;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><a
  href="https://www.amazon.com/dp/B0921VFJ2C?ref=emc_p_m_21_i_n"><span
  style='font-family:"Times New Roman",serif;color:#1155CC;text-decoration:
  none'>NexiGo</span><span style='font-family:"Times New Roman",serif;
  color:#1155CC'>&nbsp;Webcam with Light</span></a><span style='font-family:
  "Times New Roman",serif;color:black'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid black 1.0pt;border-top:none;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>$54.99</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid black 1.0pt;
  border-right:solid black 1.0pt;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>$39.99</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid black 1.0pt;border-top:none;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>Up to 120 fps</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid black 1.0pt;
  border-right:solid black 1.0pt;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>60 fps</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid black 1.0pt;border-top:none;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>USB 2.0 high transfer</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid black 1.0pt;
  border-right:solid black 1.0pt;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>USB A</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid black 1.0pt;border-top:none;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>Note: Described as a
  top ranked camera for detecting objects in motion.</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid black 1.0pt;
  border-right:solid black 1.0pt;padding:5.0pt 5.0pt 5.0pt 5.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-family:"Times New Roman",serif;color:black'>Note: Has built in
  light which can be helpful in avoiding shadows.&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal;vertical-align:
baseline'><b><span style='font-family:"Times New Roman",serif;color:black'>3.</span></b><b><span
style='font-size:7.0pt;font-family:"Times New Roman",serif;color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></b><b><span
style='font-family:"Times New Roman",serif;color:black'>Team Organization</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;line-height:normal'><span style='font-family:"Times New Roman",serif;
color:black'>I spent the remainder of my time these two weeks working on
documentation and organizing team meetings and check-ins. I contributed
sections 1.0, 3.0, and 4.5 to the A2 functional specification document. I also
created folders in our teams shared Google Drive folder to organize our work
accordingly. Finally, I sent invites to the team for a weekly meeting on
Saturdays. The goal of these meetings will be to check in, offer support, and
complete our weekly team assignments.&nbsp;</span></p>

<p class=MsoNormal style='line-height:11.55pt'><span style='color:black'>&nbsp;</span></p>

</div>

</body>

</html>
